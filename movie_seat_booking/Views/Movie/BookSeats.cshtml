@model BookSeatsViewModel




<section id="services" class="services section">

    <!-- Section Title -->
    <div class="container section-title" data-aos="fade-up">
        <h2>Book Your Seat</h2>
@*         <p>Necessitatibus eius consequatur ex aliquid fuga eum quidem sint consectetur velit</p>
 *@    </div><!-- End Section Title -->

    <div class="container">
        
        <h2>Movies</h2>
<form method="post" asp-action="ConfirmBooking" id="bookingForm">
    <input type="hidden" name="movieId" value="@Model.Movie.MovieId" />
    <input type="hidden" id="selectedSeatIds" name="selectedSeatIds" />

    <div>
        <h3>Select Seats:</h3>

        <!-- Seat layout grid -->
        <div class="seat-layout">
            @for (int row = 1; row <= 5; row++)
            {
                <div class="row">
                    @for (int col = 1; col <= 5; col++)
                    {
                        // Find the seat for the current row and column
                        var seat = Model.AvailableSeats.FirstOrDefault(s => s.RowName == row && s.ColumnName == col);

                        if (seat != null)
                        {
                          


                            <button type="button" class="seat-button available" data-seat-id="@seat.SeatId" data-seat-name="Row @seat.RowName, Column @seat.ColumnName">
                                <i class="fa-solid fa-couch"></i>  @* Row @seat.RowName, Column @seat.ColumnName *@
                            </button>
                        }
                        else
                        {
           

                            <button type="button" class="seat-button booked" data-seat-id="3" data-seat-name="Row A, Column 3">
                                <i class="fa-solid fa-couch"></i>   @* Row @row, Column @col (Booked) *@
                            </button>
                        }
                    }
                </div>
            }
        </div>
    </div>
            <br />
            <br />   
            <br />
            <!-- Customer information input -->
 
            <div class="col-md-6">

                <label for="customerName">Your Name:</label>
                <input type="text" class="form-control" name="customerName" id="customerName" required />
            </div> 
            <div class="col-md-12">
                <a asp-area="" asp-controller="Movie" asp-action="BookSeats" class="btn btn-primary">Book Seats</a>
            </div>
            <br />
            <div class="col-md-12">
                <p>Don't have an account? <a href="@Url.Action("Index", "Movie")">Book More </a></p>
       
            </div>

   

</form>



</div>
</section>
<script>
    // Handle the selection/deselection of seats
    const selectedSeats = new Set(); // Set to store selected seat IDs

    // Select all available seat buttons
    const seatButtons = document.querySelectorAll('.seat-button.available');

    seatButtons.forEach(button => {
        button.addEventListener('click', function () {
            const seatId = this.getAttribute('data-seat-id');

            // Toggle the selected state
            if (selectedSeats.has(seatId)) {
                selectedSeats.delete(seatId); // Remove from selected set
                this.classList.remove('selected'); // Remove selected style
            } else {
                selectedSeats.add(seatId); // Add to selected set
                this.classList.add('selected'); // Add selected style
            }

            // Update the hidden input field with the selected seat IDs
            document.getElementById('selectedSeatIds').value = Array.from(selectedSeats).join(',');
        });
    });
</script>









