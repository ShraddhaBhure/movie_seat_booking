@model CreateSeatsViewModel

<form method="post" action="/Admin/CreateSeatsForMovie">
    <div>
        <label for="MovieId">Select Movie:</label>
        <select id="MovieId" name="MovieId">
            @foreach (var movie in ViewData["Movies"] as List<Movie>)
            {
                <option value="@movie.MovieId">@movie.Title</option>
            }
        </select>
    </div>

    <div>
        <label for="RowGroupId">Select Row Group:</label>
        <select id="RowGroupId" name="RowGroupId">
            <!-- RowGroups will be populated via AJAX after selecting a movie -->
        </select>
    </div>

    <div>
        <label for="NumRows">Enter Number of Rows:</label>
        <input type="number" id="NumRows" name="NumRows" min="1" />
    </div>

    <div>
        <label for="NumColumns">Enter Number of Columns:</label>
        <input type="number" id="NumColumns" name="NumColumns" min="1" />
    </div>

    <button type="submit">Create Seats</button>
</form>

<script>
    // AJAX to load RowGroups based on selected Movie
    document.getElementById("MovieId").addEventListener("change", function () {
        var movieId = this.value;
        fetch('/Admin/GetRowGroups?movieId=' + movieId)
            .then(response => response.json())
            .then(rowGroups => {
                var rowGroupSelect = document.getElementById("RowGroupId");
                rowGroupSelect.innerHTML = ""; // Clear previous options
                rowGroups.forEach(rg => {
                    var option = document.createElement("option");
                    option.value = rg.RowGroupId;
                    option.text = rg.GroupName + " - Price: " + rg.Price;
                    rowGroupSelect.appendChild(option);
                });
            });
    });
</script>
